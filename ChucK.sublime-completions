{
        "scope": "source.chuck",

        "completions":
        [
                { "trigger": "Std.abs", "contents": "Std.abs( ${1:int} )" },
                { "trigger": "Std.fabs", "contents": "Std.fabs( ${1:float} )" },
                { "trigger": "Std.sgn", "contents": "Std.sgn( ${1:float} )" },
                { "trigger": "Std.system", "contents": "Std.system( ${1:cmd} )" },
                { "trigger": "Std.atoi", "contents": "Std.atoi( ${1:string} )" },
                { "trigger": "Std.atof", "contents": "Std.atof( ${1:string} )" },
                { "trigger": "Std.getenv", "contents": "Std.getenv( ${1:key} )" },
                { "trigger": "Std.setenv", "contents": "Std.setenv( ${1:key}, $2{string} )" },
                { "trigger": "Std.mtof", "contents": "Std.mtof( ${1:float} )" },
                { "trigger": "Std.ftom", "contents": "Std.ftom( ${1:float} )" },
                { "trigger": "Std.powtodb", "contents": "Std.powtodb( ${1:float} )" },
                { "trigger": "Std.rmstodb", "contents": "Std.rmstodb( ${1:float} )" },
                { "trigger": "Std.dbtopow", "contents": "Std.dbtopow( ${1:float} )" },
                { "trigger": "Std.dbtorms", "contents": "Std.dbtorms( ${1:float} )" },
                { "trigger": "Math.sin", "contents": "Math.sin( ${1:float} )" },
                { "trigger": "Math.cos", "contents": "Math.cos( ${1:float} )" },
                { "trigger": "Math.tan", "contents": "Math.tan( ${1:float} )" },
                { "trigger": "Math.asin", "contents": "Math.asin( ${1:float} )" },
                { "trigger": "Math.acos", "contents": "Math.acos( ${1:float} )" },
                { "trigger": "Math.atan", "contents": "Math.atan( ${1:float} )" },
                { "trigger": "Math.atan2", "contents": "Math.atan2( ${1:y}, ${2:x} )" },
                { "trigger": "Math.sinh", "contents": "Math.sinh( ${1:float} )" },
                { "trigger": "Math.cosh", "contents": "Math.cosh( ${1:float} )" },
                { "trigger": "Math.tanh", "contents": "Math.tanh( ${1:float} )" },
                { "trigger": "Math.hypot", "contents": "Math.hypot( ${1:x}, ${2:y} )" },
                { "trigger": "Math.pow", "contents": "Math.pow( ${1:x}, ${2:y} )" },
                { "trigger": "Math.sqrt", "contents": "Math.sqrt( ${1:float} )" },
                { "trigger": "Math.exp", "contents": "Math.exp( ${1:float} )" },
                { "trigger": "Math.log", "contents": "Math.log( ${1:float} )" },
                { "trigger": "Math.log2", "contents": "Math.log2( ${1:float} )" },
                { "trigger": "Math.log10", "contents": "Math.log10( ${1:float} )" },
                { "trigger": "Math.random", "contents": "Math.random()" },
                { "trigger": "Math.random2", "contents": "Math.random2( ${1:min}, ${2:max} )" },
                { "trigger": "Math.randomf", "contents": "Math.randomf()" },
                { "trigger": "Math.random2f", "contents": "Math.random2f( ${1:min}, ${2:max} )" },
                { "trigger": "Math.floor", "contents": "Math.floor( ${1:float} )" },
                { "trigger": "Math.ceil", "contents": "Math.ceil( ${1:float} )" },
                { "trigger": "Math.round", "contents": "Math.round( ${1:float} )" },
                { "trigger": "Math.trunc", "contents": "Math.trunc( ${1:float} )" },
                { "trigger": "Math.fmod", "contents": "Math.fmod( ${1:x}, ${2:y} )" },
                { "trigger": "Math.remainder", "contents": "Math.remainder( ${1:x}, ${2:y} )" },
                { "trigger": "Math.min", "contents": "Math.min( ${1:x}, ${2:y} )" },
                { "trigger": "Math.max", "contents": "Math.max( ${1:x}, ${2:y} )" },
                { "trigger": "Math.nextpow2", "contents": "Math.nextpow2( ${1:int} )" },
                { "trigger": "Math.isinf", "contents": "Math.isinf( ${1:float} )" },
                { "trigger": "Math.isnan", "contents": "Math.isnan( ${1:float} )" },
                // various methods
                { "trigger": ".freq", "contents": ".freq" },
                { "trigger": ".gain", "contents": ".gain" },
                { "trigger": ".pan", "contents": ".pan" },
                { "trigger": ".chan", "contents": ".chan" },
                { "trigger": ".channel", "contents": ".channel" },
                { "trigger": ".channels", "contents": ".channels" },
                { "trigger": ".pos", "contents": ".pos" },
                { "trigger": ".width", "contents": ".width" },
                { "trigger": ".keyOn", "contents": ".keyOn(1);" },
                { "trigger": ".keyOff", "contents": ".keyOff(1);" },
                { "trigger": ".read", "contents": ".read" },
                { "trigger": ".duration", "contents": "duration" },
                { "trigger": ".set (ADSR generic)", "contents": "set( 2::ms, 171::ms, 0.20, 35::ms );  //a, d, s, r"},
                { "trigger": ".set (ADSR ms)", "contents": "set( ${1:int}::ms, ${2:int}::ms, ${3:float}, ${4:int}::ms );"},
                // string methods
                { "trigger": ".length", "contents": ".length()" },
                { "trigger": ".charAt index", "contents": "charAt(int ${1:index});" },
                { "trigger": ".setCharAt index, ch", "contents": "setCharAt(int ${1:index}, int ${2:char});" },
                { "trigger": ".substring pos", "contents": "substring(int ${1:pos});" },
                { "trigger": ".substring pos, len", "contents": "substring(int ${1:pos}, int ${2:len});" },
                { "trigger": ".insert pos, str", "contents": "insert(int ${1:pos}, string ${2:str});" },
                { "trigger": ".erase pos, len", "contents": "erase(int ${1:pos}, int ${2:len});" },
                { "trigger": ".replace pos, str", "contents": "replace(int ${1:pos}, string ${2:str});" },
                { "trigger": ".replace pos, len, str", "contents": "replace(int ${1:pos}, int ${2:len}, string ${3:str});" },
                { "trigger": ".find ch", "contents": "find(int ${1:ch});" },
                { "trigger": ".find ch, pos", "contents": "find(int ${1:ch}, int ${2:pos});" },
                { "trigger": ".find str", "contents": "find(string ${1:str});" },
                { "trigger": ".find str, pos", "contents": "find(string ${1:str}, int ${2:pos});" },
                { "trigger": ".rfind ch", "contents": "rfind(int ${1:ch});" },
                { "trigger": ".rfind ch, pos", "contents": "rfind(int ${1:ch}, int ${2:pos});" },
                { "trigger": ".rfind str", "contents": "rfind(string ${1:str});" },
                { "trigger": ".rfind str, pos", "contents": "rfind(string ${1:str}, int ${2:pos});" },
                // for casting
                { "trigger": "to float", "contents": "\\$ float => float ${1:name};" },
                { "trigger": "to int", "contents": "\\$ int => int ${1:name};" },
                // keywords
                "break",
                "continue",
                "true",
                "false",
                // stdout to console, with and without newline
                "chout <= \" \";",
                "chout <= IO.newline();",
                // constants
                "pi",
                "Math.INT_MAX",
                "Math.PI",
                "Math.TWO_PI",
                "Math.RANDOM_MAX",
                // types
                "int",
                "float",
                "time",
                "dur",
                "void",
                "complex",
                "polar",
                // time
                "samp",
                "ms",
                "second",
                "minute",
                "hour",
                "day",
                "week",
                // specials
                "now",
                "dac;",
                "adc;",
                "blackhole;",
                // UGens
                { "trigger": "SinOsc", "contents": "SinOsc ${1:name} => " },
                { "trigger": "PulseOsc", "contents": "PulseOsc ${1:name} => " },
                { "trigger": "SqrOsc", "contents": "SqrOsc ${1:name} => " },
                { "trigger": "TriOsc", "contents": "TriOsc ${1:name} => " },
                { "trigger": "SawOsc", "contents": "SawOsc ${1:name} => " },
                { "trigger": "Phasor", "contents": "Phasor ${1:name} => " },
                { "trigger": "Noise", "contents": "Noise ${1:name} => " },
                { "trigger": "Impulse", "contents": "Impulse ${1:name} => " },
                { "trigger": "Step", "contents": "Step ${1:name} => " },
                { "trigger": "Gain", "contents": "Gain ${1:name} => " },
                { "trigger": "SndBuf", "contents": "SndBuf ${1:name} => " },
                { "trigger": "HalfRect", "contents": "HalfRect ${1:name} => " },
                { "trigger": "FullRect", "contents": "FullRect ${1:name} => " },
                { "trigger": "ZeroX", "contents": "ZeroX ${1:name} => " },
                { "trigger": "Mix2", "contents": "Mix2 ${1:name} => " },
                { "trigger": "Pan2", "contents": "Pan2 ${1:name} => " },
                { "trigger": "GenX", "contents": "GenX ${1:name} => " },
                { "trigger": "CurveTable", "contents": "CurveTable ${1:name} => " },
                { "trigger": "WarpTable", "contents": "WarpTable ${1:name} => " },
                { "trigger": "LiSa", "contents": "LiSa ${1:name} => " },
                { "trigger": "OneZero", "contents": "OneZero ${1:name} => " },
                { "trigger": "TwoZero", "contents": "TwoZero ${1:name} => " },
                { "trigger": "OnePole", "contents": "OnePole ${1:name} => " },
                { "trigger": "TwoPole", "contents": "TwoPole ${1:name} => " },
                { "trigger": "PoleZero", "contents": "PoleZero ${1:name} => " },
                { "trigger": "BiQuad", "contents": "BiQuad ${1:name} => " },
                { "trigger": "Filter", "contents": "Filter ${1:name} => " },
                { "trigger": "LPF", "contents": "LPF ${1:name} => " },
                { "trigger": "HPF", "contents": "HPF ${1:name} => " },
                { "trigger": "BPF", "contents": "BPF ${1:name} => " },
                { "trigger": "BRF", "contents": "BRF ${1:name} => " },
                { "trigger": "ResonZ", "contents": "ResonZ ${1:name} => " },
                { "trigger": "Dyno", "contents": "Dyno ${1:name} => " },
                { "trigger": "Envelope", "contents": "Envelope ${1:name} => " },
                { "trigger": "ADSR", "contents": "ADSR ${1:name} => " },
                { "trigger": "Delay", "contents": "Delay ${1:name} => " },
                { "trigger": "DelayA", "contents": "DelayA ${1:name} => " },
                { "trigger": "DelayL", "contents": "DelayL ${1:name} => " },
                { "trigger": "Echo", "contents": "Echo ${1:name} => " },
                { "trigger": "JCRev", "contents": "JCRev ${1:name} => " },
                { "trigger": "NRev", "contents": "NRev ${1:name} => " },
                { "trigger": "PRCRev", "contents": "PRCRev ${1:name} => " },
                { "trigger": "Chorus", "contents": "Chorus ${1:name} => " },
                { "trigger": "Modulate", "contents": "Modulate ${1:name} => " },
                { "trigger": "PitShift", "contents": "PitShift ${1:name} => " },
                { "trigger": "SubNoise", "contents": "SubNoise ${1:name} => " },
                { "trigger": "Blit", "contents": "Blit ${1:name} => " },
                { "trigger": "BlitSaw", "contents": "BlitSaw ${1:name} => " },
                { "trigger": "BlitSquare", "contents": "BlitSquare ${1:name} => " },
                { "trigger": "WvIn", "contents": "WvIn ${1:name} => " },
                { "trigger": "WaveLoop", "contents": "WaveLoop ${1:name} => " },
                { "trigger": "WvOut", "contents": "WvOut ${1:name} => " },
                // STK
                { "trigger": "StkInstrument", "contents": "StkInstrument ${1:name} => " },
                { "trigger": "BandedWG", "contents": "BandedWG ${1:name} => " },
                { "trigger": "BlowBotl", "contents": "BlowBotl ${1:name} => " },
                { "trigger": "BlowHole", "contents": "BlowHole ${1:name} => " },
                { "trigger": "Bowed", "contents": "Bowed ${1:name} => " },
                { "trigger": "Brass", "contents": "Brass ${1:name} => " },
                { "trigger": "Clarinet", "contents": "Clarinet ${1:name} => " },
                { "trigger": "Flute", "contents": "Flute ${1:name} => " },
                { "trigger": "Mandolin", "contents": "Mandolin ${1:name} => " },
                { "trigger": "ModalBar", "contents": "ModalBar ${1:name} => " },
                { "trigger": "Moog", "contents": "Moog ${1:name} => " },
                { "trigger": "Saxofony", "contents": "Saxofony ${1:name} => " },
                { "trigger": "Shakers", "contents": "Shakers ${1:name} => " },
                { "trigger": "Sitar", "contents": "Sitar ${1:name} => " },
                { "trigger": "StifKarp", "contents": "StifKarp ${1:name} => " },
                { "trigger": "VoicForm", "contents": "VoicForm ${1:name} => " },
                { "trigger": "FM", "contents": "FM ${1:name} => " },
                { "trigger": "BeeThree", "contents": "BeeThree ${1:name} => " },
                { "trigger": "FMVoices", "contents": "FMVoices ${1:name} => " },
                { "trigger": "HevyMetl", "contents": "HevyMetl ${1:name} => " },
                { "trigger": "PercFlut", "contents": "PercFlut ${1:name} => " },
                { "trigger": "Rhodey", "contents": "Rhodey ${1:name} => " },
                { "trigger": "TubeBell", "contents": "TubeBell ${1:name} => " },
                { "trigger": "Wurley", "contents": "Wurley ${1:name} => " },
                // analysis
                { "trigger": "UAna", "contents": "UAna ${1:name} => " },
                { "trigger": "UAnaBlob", "contents": "UAnaBlob ${1:name} => " },
                { "trigger": "Windowing FFT", "contents": "Windowing FFT ${1:name} => " },
                { "trigger": "IFFT", "contents": "IFFT ${1:name} => " },
                { "trigger": "DCT", "contents": "DCT ${1:name} => " },
                { "trigger": "IDCT", "contents": "IDCT Centroid ${1:name} => " },
                { "trigger": "Flux", "contents": "Flux ${1:name} => " },
                { "trigger": "RMS", "contents": "RMS ${1:name} => " },
                { "trigger": "RollOff", "contents": "RollOff ${1:name} => " }
        ]
}
